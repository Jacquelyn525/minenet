<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - MvcWeb</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/MvcWeb.styles.css" asp-append-version="true" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">MvcWeb</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
                        </li>
                    </ul>
                    <p class="nav navbar-text">Hello, @User.Identity?.Name!</p>
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <div class="container">
        <h3>Alerts</h3>

        <div>
            <hr />
            <dl class="row">
                <dt class="col-sm-2">
                    @* @Html.DisplayNameFor(model => model.ProductName) *@
                </dt>
                <dd class="col-sm-10">
                    @* @Html.DisplayFor(model => model.ProductName) *@
                </dd>
                <dt class="col-sm-2">
                    @* @Html.DisplayNameFor(model => model.ProductPrice) *@
                </dt>
                <dd class="col-sm-10">
                    @* @Html.DisplayFor(model => model.ProductPrice) *@
                </dd>
            </dl>
        </div>
    </div>
    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2023 - MvcWeb - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>
        // todo:  extract to libs file
        $(document).ready(function () {
            var connection = new signalR.HubConnectionBuilder()
                .withUrl("/yourHubPath") // Replace with your actual hub path
                .configureLogging(signalR.LogLevel.Information)
                .build();

            connection.start().then(function () {
                console.log("Connected to hub");
            }).catch(function (err) {
                console.error(err.toString());
            });

            // Dummy data (replace with your actual data)
            var data = [
                { Column1: "Data 1", Column2: "Data 2", Column3: "Data 3" },
                { Column1: "Data 4", Column2: "Data 5", Column3: "Data 6" },
                // Add more data as needed
            ];

            // Function to update grid content
            function updateGrid() {
                var gridBody = $("#grid-body");
                gridBody.empty(); // Clear existing content

                // Iterate through data and append rows
                data.forEach(function (item) {
                    var row = $("<div class='grid-row'>");
                    row.append("<div class='grid-column'>" + item.Column1 + "</div>");
                    row.append("<div class='grid-column'>" + item.Column2 + "</div>");
                    row.append("<div class='grid-column'>" + item.Column3 + "</div>");
                    gridBody.append(row);
                });

                // Make the grid sortable
                $("#sortable-grid").sortable({
                    items: ".grid-row",
                    cursor: "grabbing",
                    update: function (event, ui) {
                        // Handle sorting updates
                        var sortedIds = $("#sortable-grid .grid-row").map(function () {
                            return $(this).index();
                        }).get();

                        // Send sortedIds to the hub or perform any required action
                        connection.invoke("UpdateSortOrder", sortedIds);
                    }
                }).disableSelection();
            }

            // Call the updateGrid function initially and after any hub updates
            updateGrid();

            // Hub method to receive updates from the server
            connection.on("UpdateGrid", function (updatedData) {
                data = updatedData;
                updateGrid();
            });
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
