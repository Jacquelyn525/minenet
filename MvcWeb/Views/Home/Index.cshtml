@{
    ViewData["Title"] = "Miner Locations";
}
<div class="container">
    <h3>Miner Locations</h3>

    <div id="sortable-grid">
        <div class="grid-header">
            <div class="grid-column">Column 1</div>
            <div class="grid-column">Column 2</div>
            <div class="grid-column">Column 3</div>
        </div>
        <div id="tags-grid-body"></div>
    </div>
</div>

<!--

  <div class="form-group row">
      <label for="userInput" class="col-2 col-form-label">User</label>
      <div class="col col-sm-6">
          <input id="userInput" class="form-control" />
      </div>
  </div>

  <div class="form-group row">
      <label for="message" class="col-2 col-form-label">Message</label>
      <div class="col col-sm-6">
          <input id="messageInput" class="form-control" />
      </div>
  </div>

  <button id="send" type="button" class="btn btn-primary">Send Message</button>

  <hr>

  <ul id="messageList"></ul>

-->
@section Scripts
{
    @* <script src="~/chat.js"></script> *@
    <script>
        // todo:  extract to libs file
        $(document).ready(function () {
            var connection = new signalR.HubConnectionBuilder()
                .withUrl("/ws/tags") // Replace with your actual hub path
                .configureLogging(signalR.LogLevel.Information)
                .build();

            connection.start().then(function () {
                console.log("Connected to hub");
            }).catch(function (err) {
                console.error(err.toString());
            });

            // Dummy data (replace with your actual data)
            var data = [
                { Column1: "Data 1", Column2: "Data 2", Column3: "Data 3" },
                { Column1: "Data 4", Column2: "Data 5", Column3: "Data 6" },
                // Add more data as needed
            ];

            // Function to update grid content
            function updateGrid() {
                var gridBody = $("#tags-grid-body");
                gridBody.empty(); // Clear existing content

                // Iterate through data and append rows
                data.forEach(function (item) {
                    var row = $("<div class='grid-row'>");
                    row.append("<div class='grid-column'>" + item.Column1 + "</div>");
                    row.append("<div class='grid-column'>" + item.Column2 + "</div>");
                    row.append("<div class='grid-column'>" + item.Column3 + "</div>");
                    gridBody.append(row);
                });

                // Make the grid sortable
                $("#sortable-grid").sortable({
                    items: ".grid-row",
                    cursor: "grabbing",
                    update: function (event, ui) {
                        // Handle sorting updates
                        var sortedIds = $("#sortable-grid .grid-row").map(function () {
                            return $(this).index();
                        }).get();

                        // Send sortedIds to the hub or perform any required action
                        connection.invoke("UpdateSortOrder", sortedIds);
                    }
                }).disableSelection();
            }

            // Call the updateGrid function initially and after any hub updates
            updateGrid();

            // Hub method to receive updates from the server
            connection.on("UpdateGrid", function (updatedData) {
                data = updatedData;
                updateGrid();
            });
        });
    </script>
    @*
        currently exists in the _Layout view
        <style>
            #sortable-grid {
                width: 300px;
            }

            .grid-header {
                background-color: #eee;
                display: flex;
                cursor: grab;
            }

            .grid-column {
                flex: 1;
                padding: 8px;
                border: 1px solid #ddd;
            }
        </style>
    *@
}

